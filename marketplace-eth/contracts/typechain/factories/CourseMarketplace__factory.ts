/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CourseMarketplace,
  CourseMarketplaceInterface,
} from "../CourseMarketplace";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CourseHasOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "CourseIsNotCreated",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidState",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "SenderIsNotCourseOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "a",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "courseHash",
        type: "bytes32",
      },
    ],
    name: "activateCourse",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "courseHash",
        type: "bytes32",
      },
    ],
    name: "deactivateCourse",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "courseHash",
        type: "bytes32",
      },
    ],
    name: "getCourseByHash",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "proof",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "enum CourseMarketplace.State",
            name: "state",
            type: "uint8",
          },
        ],
        internalType: "struct CourseMarketplace.Course",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCourseCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getCourseHashAtIndex",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isStopped",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "courseId",
        type: "bytes16",
      },
      {
        internalType: "bytes32",
        name: "proof",
        type: "bytes32",
      },
    ],
    name: "purchaseCourse",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "courseHash",
        type: "bytes32",
      },
    ],
    name: "repurchaseCourse",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "resumeContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "selfDestruct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405260008060006101000a81548160ff0219169083151502179055506001805534801561002e57600080fd5b5061003e3361004360201b60201c565b610087565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611b57806100966000396000f3fe6080604052600436106100f75760003560e01c80636d11290b1161008a578063c4bc5da511610059578063c4bc5da5146102ee578063d76821cb14610305578063db2e21bc14610321578063f2fde38b14610338576100fe565b80636d11290b14610246578063935d7e6d1461028357806396cfda06146102ac5780639cb8a26a146102d7576100fe565b80633f683b6a116100c65780633f683b6a14610197578063442890d5146101c25780636136e1eb146101ed57806362e4e6ac14610209576100fe565b80630dbe671f1461010357806312253a6c1461012e5780632e1a7d4d14610145578063392625721461016e576100fe565b366100fe57005b600080fd5b34801561010f57600080fd5b50610118610361565b6040516101259190611877565b60405180910390f35b34801561013a57600080fd5b50610143610367565b005b34801561015157600080fd5b5061016c600480360381019061016791906115a7565b6103ef565b005b34801561017a57600080fd5b506101956004803603810190610190919061157e565b61052d565b005b3480156101a357600080fd5b506101ac61074f565b6040516101b991906117c6565b60405180910390f35b3480156101ce57600080fd5b506101d7610760565b6040516101e491906117ab565b60405180910390f35b6102076004803603810190610202919061157e565b61078a565b005b34801561021557600080fd5b50610230600480360381019061022b919061157e565b610987565b60405161023d919061185c565b60405180910390f35b34801561025257600080fd5b5061026d600480360381019061026891906115a7565b610aaf565b60405161027a91906117e1565b60405180910390f35b34801561028f57600080fd5b506102aa60048036038101906102a5919061157e565b610acc565b005b3480156102b857600080fd5b506102c1610dcd565b6040516102ce9190611877565b60405180910390f35b3480156102e357600080fd5b506102ec610dd7565b005b3480156102fa57600080fd5b50610303610e95565b005b61031f600480360381019061031a9190611542565b610f1d565b005b34801561032d57600080fd5b50610336611158565b005b34801561034457600080fd5b5061035f600480360381019061035a9190611519565b6112ac565b005b60015481565b61036f610760565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d3576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016000806101000a81548160ff021916908315150217905550565b6103f7610760565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461045b576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040516104a390611796565b60006040518083038185875af1925050503d80600081146104e0576040519150601f19603f3d011682016040523d82523d6000602084013e6104e5565b606091505b5050905080610529576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105209061183c565b60405180910390fd5b5050565b610535610760565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610599576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900460ff16156105e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105de9061181c565b60405180910390fd5b6105f081611324565b610626576040517f4db0c48300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060026000838152602001908152602001600020905060006002811115610677577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160030160149054906101000a900460ff1660028111156106c1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146106f8576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018160030160146101000a81548160ff02191690836002811115610746577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505050565b60008054906101000a900460ff1681565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900460ff16156107d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cf9061181c565b60405180910390fd5b6107e181611324565b610817576040517f4db0c48300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61082081611393565b610856576040517fcce31cc400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006002600083815260200190815260200160002090506002808111156108a6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160030160149054906101000a900460ff1660028111156108f0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610927576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008160030160146101000a81548160ff02191690836002811115610975577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055503481600101819055505050565b61098f611445565b600260008381526020019081526020016000206040518060a00160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160149054906101000a900460ff166002811115610a6c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115610aa4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815250509050919050565b600060036000838152602001908152602001600020549050919050565b610ad4610760565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b38576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900460ff1615610b86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7d9061181c565b60405180910390fd5b610b8f81611324565b610bc5576040517f4db0c48300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060026000838152602001908152602001600020905060006002811115610c16577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160030160149054906101000a900460ff166002811115610c60577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610c97576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260010154604051610ce590611796565b60006040518083038185875af1925050503d8060008114610d22576040519150601f19603f3d011682016040523d82523d6000602084013e610d27565b606091505b5050905080610d6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d62906117fc565b60405180910390fd5b60028260030160146101000a81548160ff02191690836002811115610db9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060008260010181905550505050565b6000600454905090565b60008054906101000a900460ff16610dee57600080fd5b610df6610760565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e5a576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b610e9d610760565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f01576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060006101000a81548160ff021916908315150217905550565b60008054906101000a900460ff1615610f6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f629061181c565b60405180910390fd5b60008233604051602001610f8092919061176a565b604051602081830303815290604052805190602001209050610fa181611393565b15610fd8576040517fb0fc2d9700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060046000815480929190610fed90611951565b9190505590508160036000838152602001908152602001600020819055506040518060a001604052808281526020013481526020018481526020013373ffffffffffffffffffffffffffffffffffffffff1681526020016000600281111561107e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152506002600084815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160030160146101000a81548160ff0219169083600281111561114a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555090505050505050565b60008054906101000a900460ff1661116f57600080fd5b611177610760565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111db576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff164760405161122390611796565b60006040518083038185875af1925050503d8060008114611260576040519150601f19603f3d011682016040523d82523d6000602084013e611265565b606091505b50509050806112a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a09061183c565b60405180910390fd5b50565b6112b4610760565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611318576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61132181611401565b50565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60003373ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16149050919050565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6040518060a00160405280600081526020016000815260200160008019168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600060028111156114bf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525090565b6000813590506114d481611ac5565b92915050565b6000813590506114e981611adc565b92915050565b6000813590506114fe81611af3565b92915050565b60008135905061151381611b0a565b92915050565b60006020828403121561152b57600080fd5b6000611539848285016114c5565b91505092915050565b6000806040838503121561155557600080fd5b6000611563858286016114da565b9250506020611574858286016114ef565b9150509250929050565b60006020828403121561159057600080fd5b600061159e848285016114ef565b91505092915050565b6000602082840312156115b957600080fd5b60006115c784828501611504565b91505092915050565b6115d9816118ae565b82525050565b6115e8816118ae565b82525050565b6115ff6115fa826118ae565b61199a565b82525050565b61160e816118c0565b82525050565b611625611620826118cc565b6119ac565b82525050565b611634816118f8565b82525050565b611643816118f8565b82525050565b6116528161193f565b82525050565b600061166560108361189d565b915061167082611a33565b602082019050919050565b600061168860138361189d565b915061169382611a5c565b602082019050919050565b60006116ab600083611892565b91506116b682611a85565b600082019050919050565b60006116ce60108361189d565b91506116d982611a88565b602082019050919050565b60a0820160008201516116fa600085018261174c565b50602082015161170d602085018261174c565b506040820151611720604085018261162b565b50606082015161173360608501826115d0565b5060808201516117466080850182611649565b50505050565b61175581611935565b82525050565b61176481611935565b82525050565b60006117768285611614565b60108201915061178682846115ee565b6014820191508190509392505050565b60006117a18261169e565b9150819050919050565b60006020820190506117c060008301846115df565b92915050565b60006020820190506117db6000830184611605565b92915050565b60006020820190506117f6600083018461163a565b92915050565b6000602082019050818103600083015261181581611658565b9050919050565b600060208201905081810360008301526118358161167b565b9050919050565b60006020820190508181036000830152611855816116c1565b9050919050565b600060a08201905061187160008301846116e4565b92915050565b600060208201905061188c600083018461175b565b92915050565b600081905092915050565b600082825260208201905092915050565b60006118b982611915565b9050919050565b60008115159050919050565b60007fffffffffffffffffffffffffffffffff0000000000000000000000000000000082169050919050565b6000819050919050565b600081905061191082611ab1565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061194a82611902565b9050919050565b600061195c82611935565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561198f5761198e6119c8565b5b600182019050919050565b60006119a5826119b6565b9050919050565b6000819050919050565b60006119c182611a26565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60008160601b9050919050565b7f5472616e73666572206661696c65642100000000000000000000000000000000600082015250565b7f436f6e74726163742069732053746f7070656400000000000000000000000000600082015250565b50565b7f5472616e73666572206661696c65642e00000000000000000000000000000000600082015250565b60038110611ac257611ac16119f7565b5b50565b611ace816118ae565b8114611ad957600080fd5b50565b611ae5816118cc565b8114611af057600080fd5b50565b611afc816118f8565b8114611b0757600080fd5b50565b611b1381611935565b8114611b1e57600080fd5b5056fea2646970667358221220537eb36bf5d3f02ae0630cd4a0ca74e4fb55dd4e9a786f9c1410cb8b306a369664736f6c63430008040033";

export class CourseMarketplace__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CourseMarketplace> {
    return super.deploy(overrides || {}) as Promise<CourseMarketplace>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CourseMarketplace {
    return super.attach(address) as CourseMarketplace;
  }
  connect(signer: Signer): CourseMarketplace__factory {
    return super.connect(signer) as CourseMarketplace__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CourseMarketplaceInterface {
    return new utils.Interface(_abi) as CourseMarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CourseMarketplace {
    return new Contract(address, _abi, signerOrProvider) as CourseMarketplace;
  }
}
